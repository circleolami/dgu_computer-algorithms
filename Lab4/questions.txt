Q1.
정렬하려는 배열의 크기 N (30000 > N >= 5000)을 입력 받아 아래와 같은 세 가지 데이터 배열 A, B, C를 만들고,
이 데이터 배열 A, B, C 각각에 대해 Counting Sort를 이용해 오름차순으로 정렬시켜주는 프로그램을 작성하시오.
이때, 정렬된 결과뿐만 아니라 정렬 과정에서의 데이터비교 연산횟수와 자료이동 연산횟수 또한 아래의 입출력 예제와 같이 출력되어야 한다. 
- 데이터 배열 A: 1부터 N까지의 숫자들이 내림차순으로 정렬된 데이터 배열
- 데이터 배열 B: 1부터 N까지의 숫자들이 랜덤하게 재배치된 데이터 배열
- 데이터 배열 C: 1부터 N까지의 숫자들 중 중복을 허용하여 N개를 랜덤하게 선택해 만든 데이터 배열 

Q2. 
정렬하려는 배열의 크기 N (30000 > N >= 5000)을 입력 받아 문제 1번과 동일한 방법으로 데이터 A, 데이터 B, 데이터 C를 생성하고,
이 데이터 배열 A, B, C 각각에 대해 Bucket Sort 기반 Redix Sort를 이용해 오름차순으로 정렬시켜주는 프로그램을 작성하시오.
이때, 정렬된 결과뿐만 아니라 정렬 과정에서의 데이터비교 연산횟수와 자료이동 연산횟수 또한 아래의 입출력 예제와 같이 출력되어야 한다. 

Q3. 
N (>10000)개의 양의 정수자료를 랜덤함수로서 발생하여, partition() 연산을 사용하여 k번째 원소를 찾는 select(a, l, r, k)을 사용하여,
최소치, 최대치 및 중앙치를 찾고 비교연산 횟수를 각각 출력하시오.

Q4. 
문제 3번과 동일한 문제를 해결하지만 최악시간 복잡도가 O(N)이 되도록 하는 select_N(a, l, r, k)을 사용하여,
최소치, 최대치 및 중앙치를 찾고 비교연산 횟수를 각각 출력하시오. 
문제 1번에서 만든 데이터 A, B, C에 대해 이를 수행해보고 문제 3번과 결과가 크게 달라지는 때를 골라서 제출하시오. 