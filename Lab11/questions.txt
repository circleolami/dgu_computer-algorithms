Q1. 
점의 개수 N(<=100)을 입력받고, N개의 점의 좌표 X, Y를 입력받아 단순 폐쇄 경로(Simple Closed Path) Poly[]를 생성하는 프로그램을 아래의 소스 코드를 이용해 작성하세요. 
또한 단순 폐쇄 경로를 생성하는 과정에서 두 점 사이의 상대각도 계산 횟수 및 각의 비교횟수를 아래의 출력 예제에 맞춰 출력하시오. 
(단, 수평각들을 정렬하는 알고리즘은 Heap Sort를 이용하고, 점의 X, Y 좌표는 100보다 작다고 가정한다.)

Q2. 
임의의 점 Z의 좌표 값과 단순 폐쇄 경로 생성을 위한 N개의 점의 좌표값들을 입력받고, 해당 점이 단순 폐쇄 경로 Ploy[] 내부에 존재하는 점인가를 판단해주는 프로그램을 구현하세요. 
이때, 아래의 입출력 예제에 맞춰 출력하세요. 

Q3. 
점의 개수 N(<=100)과 양의 정수 m(<N)을 입력 받은 후, 각 점의 좌표 X, Y(정수이며, 0에서 100까지의 값을 지닌다)를 랜덤하게 생성한 후
(단, 동일한 좌표를 지나는 점은 존재하지 않도록 생성한다), 각 점마다 그 점을 제외하고 가장 가까운 점 m개를 연결하여 그래프 (V, E)를 생성한다. 
이후, 이 그래프에서 1번째 점과 N번째 점 사이의 최단거리 및 그 경로를 출력하는 프로그램을 작성하세요. 
단, 두 점 사이를 잇는 경로가 없는 경우에는 없다고 출력한다. m을 1부터 시도해보면서 1번과 N번 점이 연결될 확률이 약 50% 이상이 되기 위해서는 어느 정도의 m이 필요한가 구해보세요. 
정확한 답을 구할 필요는 없고, 실험적으로 살펴보면 됩니다. 이러한 m에 대해 N을 늘려가며 그래프를 생성하는데 걸린 시간과 최단경로를 찾기 위해 걸린 시간(두 점 사이의 경로가 있는 경우)를 그래프로 정리하세요. 